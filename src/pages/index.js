/* eslint-disable @next/next/no-img-element */
import React from "react";
import Head from "next/head";
import style from "@/styles/pages/homeStyle.module.scss";
import AddIcon from "@mui/icons-material/Add";
import EmojiEmotionsIcon from "@mui/icons-material/EmojiEmotions";
import FormatAlignLeftIcon from "@mui/icons-material/FormatAlignLeft";
import LogoutIcon from "@mui/icons-material/Logout";
import {
  Grid,
  Typography,
  List,
  ListItem,
  ListItemAvatar,
  Avatar,
  ListItemText,
} from "@mui/material";
import { Box } from "@mui/system";
import { database } from "@/pages/utils/firebase";
import { onValue, ref } from "firebase/database";
import * as useDb from "@/pages/utils/database";

const ID = new Date().getTime()

export default function RoomChat() {
  const [isClicked, setIsClicked] = React.useState(false);
  const [selectedChat, setSelectedChat] = React.useState(null);
  const [keyword, setKeyword] = React.useState("");
  const [messageList, setMessageList] = React.useState([]);
  const [messageKey, setMessageKey] = React.useState([]);

  React.useEffect(() => {
    useDb.getData("users", (snapshot) => {
      const data = snapshot.val();
      // return data;

      // updateStarCount(postElement, data);
      // console.log(data);
    });

    useDb.getData(`messages/user_1`, (snapshot) => {
      const data = snapshot.val();
      // return data;

      // updateStarCount(postElement, data);
      if (data) {
        setMessageList(data);
        setMessageKey(Object.keys(data));
      }
    });
  }, []);

  const sendMessage = () => {
    useDb.sendData("messages", {
      [`user_1`]: {
        ...messageList,
        [new Date().getTime()]: {
          text: keyword,
          image: "",
          timeStamp: new Date().getTime(),
          user_id:ID,
          photo: "",
          sender: "Maulana",
        },
      },
    });
    setKeyword("");
  };

  return (
    <>
      <Head>
        <title>Room Chat | Message App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`container-fluid p-3 ${style.main}`}>
        <div className={`row p-0`}>
          {/* LEFT CARD */}
          <div className={`col-1`}>
            <div className={`shadow ${style.leftCard}`}>
              {/* ICON WHITE APP */}
              <div className={`row ${style.iconWhiteApp}`}>
                <div className={`col-12 d-flex justify-content-center`}>
                  <img src="/images/icon-white-app.webp" alt="icon-app" />
                </div>
              </div>

              {/* AVATAR USER */}
              <div className={`row mt-3 ${style.avatar}`}>
                <div
                  className={`col-12 border-bottom pb-4 d-flex justify-content-center`}
                >
                  <Avatar
                    alt="Maulana"
                    src="/static/images/avatar/1.jpg"
                    className={style.imgAvatar}
                  />
                </div>
              </div>

              {/* BUTTON Modal */}
              <div className={`row mt-3 ${style.buttonModal}`}>
                <div className={`col-12 d-flex justify-content-center`}>
                  <button
                    className="btn"
                    type="button"
                    data-bs-toggle="offcanvas"
                    data-bs-target="#offcanvasExample"
                    aria-controls="offcanvasExample"
                  >
                    <FormatAlignLeftIcon className={style.btn} />
                  </button>

                  <div
                    className="offcanvas offcanvas-start"
                    tabindex="-1"
                    id="offcanvasExample"
                    aria-labelledby="offcanvasExampleLabel"
                    style={{ width: "250px", backgroundColor: "#0057f8" }}
                  >
                    <div className="offcanvas-header">
                      <h5
                        className="offcanvas-title"
                        id="offcanvasExampleLabel"
                        style={{ color: "white" }}
                      >
                        Menu Option
                      </h5>
                      <button
                        type="button"
                        className="btn-close"
                        data-bs-dismiss="offcanvas"
                        aria-label="Close"
                      ></button>
                    </div>
                    <div className="offcanvas-body">
                      <div className={`row ${style.btnSetting}`}>
                        <div className={`col-3`}>
                          <img src="/images/Settings.webp" alt="icon-app" />
                        </div>
                        <div className={`col-8`}>
                          <h5>Settings</h5>
                        </div>
                      </div>
                      <div className={`row mt-4 ${style.btnContacts}`}>
                        <div className={`col-3`}>
                          <img src="/images/Contacts.webp" alt="icon-app" />
                        </div>
                        <div className={`col-8`}>
                          <h5>Contacts</h5>
                        </div>
                      </div>
                      <div className={`row mt-4 ${style.btnCalls}`}>
                        <div className={`col-3`}>
                          <img src="/images/call.webp" alt="icon-app" />
                        </div>
                        <div className={`col-8`}>
                          <h5>Calls</h5>
                        </div>
                      </div>
                      <div className={`row mt-4 ${style.btnSave}`}>
                        <div className={`col-3`}>
                          <img src="/images/save.webp" alt="icon-app" />
                        </div>
                        <div className={`col-8`}>
                          <h5>Save messages</h5>
                        </div>
                      </div>
                      <div className={`row mt-4 ${style.btnInvite}`}>
                        <div className={`col-3`}>
                          <img src="/images/Invite.webp" alt="icon-app" />
                        </div>
                        <div className={`col-8`}>
                          <h5>Invite Friends</h5>
                        </div>
                      </div>
                      <div className={`row mt-4 ${style.btnMessageFAQ}`}>
                        <div className={`col-3`}>
                          <img src="/images/FAQ.webp" alt="icon-app" />
                        </div>
                        <div className={`col-8`}>
                          <h5>Message FAQ</h5>
                        </div>
                      </div>
                      <div className={`row ${style.btnLogOut}`}>
                        <div className={`col-3`}>
                          <LogoutIcon className={style.logout} />
                        </div>
                        <div className={`col-8`}>
                          <h5>Log Out</h5>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>

          {/* MID CARD */}
          <div className={`col-3`}>
            <div className={`shadow ${style.midCard}`}>
              {/* ICON AND NAME APP */}
              <div className={`row pt-3 px-3 d-flex align-items-center`}>
                <div className={`col-2 offset-1 ${style.iconApp}`}>
                  <img
                    // className="rounded-circle border border-1"
                    src="/images/icon-app.webp"
                    alt="icon-app"
                  />
                </div>
                <div className={`col-9 mt-1 ${style.nameApp}`}>
                  <h3>Message App</h3>
                </div>
              </div>
              {/* FROM SEARCH */}
              <div className={`row px-3 mt-3`}>
                {/* FORM SEARCH */}
                <div className={`col-10 ${style.formSearch}`}>
                  <input
                    type="text"
                    className="form-control rounded-4"
                    aria-describedby="emailHelp"
                    placeholder="Type your message..."
                  />
                </div>
                {/* BUTTON ADD */}
                <div className={`col-2 ${style.btnAdd}`}>
                  <AddIcon
                    sx={{
                      color: "#0057f8",
                      fontSize: "40px",
                      marginLeft: "-10px",
                      cursor: "pointer",
                    }}
                  />
                </div>
              </div>
              {/* BUTTON OPTION LIST CHAT */}
              <div
                className={`row px-3 mt-3 border-bottom ${style.btnOptionChat}`}
              >
                <nav aria-label="Page navigation example">
                  <ul className="pagination">
                    <li className={`page-item text-center ${style.all}`}>
                      <a className="page-link rounded-4" href="#">
                        Important
                      </a>
                    </li>
                    <li className={`page-item text-center ${style.Important}`}>
                      <a className="page-link rounded-4" href="#">
                        All
                      </a>
                    </li>
                    <li className={`page-item text-center ${style.Unread}`}>
                      <a className="page-link rounded-4" href="#">
                        Unread
                      </a>
                    </li>
                  </ul>
                </nav>
              </div>
              {/* LIST CHAT */}
              <List className={style.listChat}>
                {[...new Array(15)].map((item, key) => (
                  <ListItem
                    alignItems="flex-start"
                    button
                    selected={selectedChat === key}
                    key={key}
                    onClick={() => {
                      setIsClicked(true);
                      setSelectedChat(key);
                    }}
                  >
                    <ListItemAvatar>
                      <Avatar alt="Theresa" src="/static/images/avatar/1.jpg" />
                    </ListItemAvatar>
                    <ListItemText
                      primary="Theresa Webb"
                      secondary={
                        <Typography
                          sx={{ display: "inline", color: "#0057f8" }}
                          component="span"
                          variant="body2"
                          color="text.primary"
                        >
                          Why did you do that?
                        </Typography>
                      }
                    />
                  </ListItem>
                ))}
              </List>
            </div>
          </div>

          {/* RIGHT CARD */}
          <div className={`col-8`}>
            <div className={`shadow ${style.rightCard}`}>
              {/* NO SELECTED */}
              {!isClicked && (
                <div className={`row ${style.noSelect}`}>
                  <div
                    className={`col-12 d-flex justify-content-center align-items-center`}
                    style={{ height: "100vh" }}
                  >
                    <h5>Please select a chat to start messaging</h5>
                  </div>
                </div>
              )}

              {/* SELECTED */}
              {isClicked && (
                <React.Fragment>
                  {/* NAVBAR ROOM CHAT */}
                  <div
                    className={`row border-1 border-bottom ${style.navbarChat}`}
                  >
                    {/* AVATAR */}
                    <div className={`col-1 me-2`}>
                      <ListItemAvatar>
                        <Avatar
                          alt="Theresa"
                          src="/static/images/avatar/1.jpg"
                          className={style.avatar}
                        />
                      </ListItemAvatar>
                    </div>
                    {/* USERNAME & STATUS */}
                    <div className={`col-4 ${style.usernameAndStatus}`}>
                      <h5>Theresa Webb</h5>
                      <p>Online</p>
                    </div>
                  </div>

                  {/* BOX CHAT */}
                  <div className={`row py-3 px-2 ${style.boxChat}`}>
                    <div className={`col-12`}>
                      {/* LEFT CHAT */}
                      {messageKey.map((item, key) => {
                        if (messageList[item]?.user_id === ID) {
                          return (
                            <Box mb={2} key={key}>
                              <Grid
                                container
                                gap={2}
                                direction="row-reverse"
                                alignItems="flex-end"
                                className="mt-3"
                              >
                                <Grid item>
                                  <Avatar
                                    alt={messageList[item]?.sender}
                                    src={messageList[item]?.photo}
                                  />
                                </Grid>
                                <Grid item md={3}>
                                  <Box
                                    className={`shadow-sm ${style.boxRight}`}
                                  >
                                    <Typography
                                      sx={{ color: "#fff", textAlign: "end" }}
                                    >
                                      {messageList[item]?.text}
                                    </Typography>
                                  </Box>
                                </Grid>
                              </Grid>
                            </Box>
                          );
                        } else {
                          return (
                            <Box mb={1} key={key} className="mt-3">
                              <Grid container gap={2} alignItems="flex-end">
                                <Grid item>
                                  <Avatar
                                    alt={messageList[item]?.sender}
                                    src={messageList[item]?.photo}
                                  />
                                </Grid>
                                <Grid item md={3}>
                                  <Box className={`shadow-sm ${style.boxLeft}`}>
                                    <Typography sx={{ color: "#fff" }}>
                                      {messageList[item]?.text}
                                    </Typography>
                                  </Box>
                                </Grid>
                              </Grid>
                            </Box>
                          );
                        }
                      })}
                    </div>
                  </div>

                  {/* EMOTICON FORM CHAT AND BUTTON SEND*/}
                  <div
                    className={`row d-flex align-items-center ${style.bottomBoxChat}`}
                  >
                    {/* EMOJI */}
                    <div className={`col-1`} style={{ width: "45px" }}>
                      <EmojiEmotionsIcon className={style.emoji} />
                    </div>
                    {/* FORM MESSAGE AND BUTTON SEND */}
                    <div className={`col-11 ${style.formMessage}`}>
                      <input
                        type="text"
                        className="form-control rounded-4"
                        aria-describedby="emailHelp"
                        placeholder="Type your message..."
                        value={keyword}
                        onChange={(e) => setKeyword(e.target.value)}
                        onKeyDown={(e) => {
                          if (e.key === "Enter") {
                            sendMessage();
                          }
                        }}
                      />
                    </div>
                  </div>
                </React.Fragment>
              )}
            </div>
          </div>
        </div>
      </main>
    </>
  );
}
